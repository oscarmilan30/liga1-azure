{
	"name": "pl_procesar_archivos_por_anio",
	"properties": {
		"activities": [
			{
				"name": "ForEachArchivos",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.lista_archivos",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "chk_existe_json",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adls_json",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@concat(item().nombre, '_', string(pipeline().parameters.anio), '.json')",
											"type": "Expression"
										},
										"folderPath": {
											"value": "@concat(pipeline().parameters.capa_landing, '/', string(pipeline().parameters.anio))",
											"type": "Expression"
										},
										"filesystem": {
											"value": "@pipeline().parameters.filesystem",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "var_continuar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "chk_existe_json",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "chk_existe_csv",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_continuar",
								"value": {
									"value": "@if(equals(item().nombre, 'campeones'), true, if(equals(item().tipo, 'csv'), activity('chk_existe_csv').output.exists, activity('chk_existe_json').output.exists))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "chk_existe_csv",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adls_csv",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@concat(item().nombre, '_', string(pipeline().parameters.anio), '.csv')",
											"type": "Expression"
										},
										"folderPath": {
											"value": "@concat(pipeline().parameters.capa_landing, '/', string(pipeline().parameters.anio))",
											"type": "Expression"
										},
										"filesystem": {
											"value": "@pipeline().parameters.filesystem",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "CheckIfShouldFail",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "var_continuar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(not(equals(item().nombre, 'campeones')), not(variables('var_continuar')))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Execute_Archivos",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pl_procesar_archivos",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"nombre_archivo": {
													"value": "@item().nombre",
													"type": "Expression"
												},
												"tipo_archivo": {
													"value": "@item().tipo",
													"type": "Expression"
												},
												"anio": {
													"value": "@pipeline().parameters.anio",
													"type": "Expression"
												},
												"rutaBase": {
													"value": "@pipeline().parameters.rutaBase",
													"type": "Expression"
												},
												"capa_raw": {
													"value": "@pipeline().parameters.capa_raw",
													"type": "Expression"
												},
												"capa_landing": {
													"value": "@pipeline().parameters.capa_landing",
													"type": "Expression"
												},
												"filesystem": {
													"value": "@pipeline().parameters.filesystem",
													"type": "Expression"
												}
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "FailMissingFile",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "@concat('Archivo obligatorio no encontrado: ', item().nombre, '_', string(pipeline().parameters.anio), '.', item().tipo)",
												"type": "Expression"
											},
											"errorCode": "FILE_NOT_FOUND"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"anio": {
				"type": "int"
			},
			"rutaBase": {
				"type": "string"
			},
			"lista_archivos": {
				"type": "array"
			},
			"capa_raw": {
				"type": "string",
				"defaultValue": "raw"
			},
			"capa_landing": {
				"type": "string",
				"defaultValue": "landing"
			},
			"filesystem": {
				"type": "string",
				"defaultValue": "liga1"
			}
		},
		"variables": {
			"var_continuar": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "pl_hijos_ligaperuana/pl_inner_procesos"
		},
		"annotations": []
	}
}