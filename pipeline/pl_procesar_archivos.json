{
	"name": "pl_procesar_archivos",
	"properties": {
		"activities": [
			{
				"name": "CheckIfShouldProcess",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(\n  not(equals(pipeline().parameters.nombre_archivo, 'campeones')),\n  pipeline().parameters.archivo_existe\n)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SkipCampeones",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "DebugInfo",
								"value": {
									"value": "\"Archivo campeones no existe - Skip\"",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SwitchByFileType",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@pipeline().parameters.tipo_archivo",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "csv",
										"activities": [
											{
												"name": "copy_csv_to_raw",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "MergeFiles"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_adls_csv",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@concat(pipeline().parameters.capa_landing, '/', string(pipeline().parameters.anio))",
															"filesystem": "@pipeline().parameters.filesystem",
															"fileName": "@concat(pipeline().parameters.nombre_archivo, '_', string(pipeline().parameters.anio), '.csv')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@concat(\n    pipeline().parameters.capa_raw,\n    trim(pipeline().parameters.rutaBase), '/',\n    pipeline().parameters.nombre_archivo, '/',\n    if(\n        equals(pipeline().parameters.ModoEjecucion,'HISTORICO'), concat('1FL/data/', string(pipeline().parameters.anio)),\n        if(equals(pipeline().parameters.ModoEjecucion,'REPROCESO'), concat(string(pipeline().parameters.anio), '/01/01/data'),\n        concat(formatDateTime(pipeline().parameters.FechaCarga,'yyyy/MM/dd'), '/data'))\n    )\n)",
															"filesystem": "@pipeline().parameters.filesystem",
															"fileName": "@concat(pipeline().parameters.nombre_archivo, '.parquet')"
														}
													}
												]
											},
											{
												"name": "RegistrarRutaRaw_CSV",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "copy_csv_to_raw",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[sp_registrar_path]",
													"storedProcedureParameters": {
														"Anio": {
															"value": {
																"value": "@pipeline().parameters.anio",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"Entidad": {
															"value": {
																"value": "@pipeline().parameters.nombre_archivo",
																"type": "Expression"
															},
															"type": "String"
														},
														"FechaCarga": {
															"value": {
																"value": "@pipeline().parameters.FechaCarga",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"ModoEjecucion": {
															"value": {
																"value": "@pipeline().parameters.ModoEjecucion",
																"type": "Expression"
															},
															"type": "String"
														},
														"Periodo": {
															"value": {
																"value": "@pipeline().parameters.anio",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineId": {
															"value": {
																"value": "@pipeline().parameters.PipelineId",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"RutaRaw": {
															"value": {
																"value": "@concat(pipeline().parameters.capa_raw, trim(pipeline().parameters.rutaBase), '/', pipeline().parameters.nombre_archivo, '/', if(equals(pipeline().parameters.ModoEjecucion,'HISTORICO'),'1FL/data/', if(equals(pipeline().parameters.ModoEjecucion,'REPROCESO'), concat(string(pipeline().parameters.anio), '/01/01/data'), concat(formatDateTime(pipeline().parameters.FechaCarga,'yyyy/MM/dd'), '/data'))), pipeline().parameters.nombre_archivo, '.parquet')",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_liga1",
													"type": "LinkedServiceReference"
												}
											}
										]
									},
									{
										"value": "json",
										"activities": [
											{
												"name": "copy_landing_json_to_raw",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "MergeFiles"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														},
														"translator": {
															"type": "TabularTranslator",
															"typeConversion": false
														},
														"additionalColumns": [
															{
																"name": "json_raw",
																"value": "@string(activity('copy_landing_json_to_raw').input)"
															}
														]
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_adls_json",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@concat(pipeline().parameters.capa_landing, '/', string(pipeline().parameters.anio))",
															"filesystem": "@pipeline().parameters.filesystem",
															"fileName": "@concat(pipeline().parameters.nombre_archivo, '_', string(pipeline().parameters.anio), '.json')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@concat(\n    pipeline().parameters.capa_raw,\n    trim(pipeline().parameters.rutaBase), '/',\n    pipeline().parameters.nombre_archivo, '/',\n    if(\n        equals(pipeline().parameters.ModoEjecucion,'HISTORICO'), concat('1FL/data/', string(pipeline().parameters.anio)),\n        if(equals(pipeline().parameters.ModoEjecucion,'REPROCESO'), concat(string(pipeline().parameters.anio), '/01/01/data'),\n        concat(formatDateTime(pipeline().parameters.FechaCarga,'yyyy/MM/dd'), '/data'))\n    )\n)",
															"filesystem": "@pipeline().parameters.filesystem",
															"fileName": "@concat(pipeline().parameters.nombre_archivo, '.parquet')"
														}
													}
												]
											},
											{
												"name": "RegistrarRutaRaw_JSON",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "copy_landing_json_to_raw",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[sp_registrar_path]",
													"storedProcedureParameters": {
														"Anio": {
															"value": {
																"value": "@pipeline().parameters.anio",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"Entidad": {
															"value": {
																"value": "@pipeline().parameters.nombre_archivo",
																"type": "Expression"
															},
															"type": "String"
														},
														"FechaCarga": {
															"value": {
																"value": "@pipeline().parameters.FechaCarga",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"ModoEjecucion": {
															"value": {
																"value": "@pipeline().parameters.ModoEjecucion",
																"type": "Expression"
															},
															"type": "String"
														},
														"Periodo": {
															"value": {
																"value": "@pipeline().parameters.anio",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineId": {
															"value": {
																"value": "@pipeline().parameters.PipelineId",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"RutaRaw": {
															"value": {
																"value": "@concat(pipeline().parameters.capa_raw, trim(pipeline().parameters.rutaBase), '/', pipeline().parameters.nombre_archivo, '/', if(equals(pipeline().parameters.ModoEjecucion,'HISTORICO'),'1FL/data/', if(equals(pipeline().parameters.ModoEjecucion,'REPROCESO'), concat(string(pipeline().parameters.anio), '/01/01/data'), concat(formatDateTime(pipeline().parameters.FechaCarga,'yyyy/MM/dd'), '/data'))), pipeline().parameters.nombre_archivo, '.parquet')",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_liga1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"nombre_archivo": {
				"type": "string"
			},
			"tipo_archivo": {
				"type": "string"
			},
			"anio": {
				"type": "int"
			},
			"rutaBase": {
				"type": "string"
			},
			"capa_raw": {
				"type": "string"
			},
			"capa_landing": {
				"type": "string"
			},
			"filesystem": {
				"type": "string"
			},
			"archivo_existe": {
				"type": "bool"
			},
			"ModoEjecucion": {
				"type": "string"
			},
			"FechaCarga": {
				"type": "string"
			},
			"PipelineId": {
				"type": "int"
			}
		},
		"variables": {
			"DebugInfo": {
				"type": "String"
			}
		},
		"folder": {
			"name": "pl_hijos_ligaperuana/pl_inner_procesos"
		},
		"annotations": []
	}
}